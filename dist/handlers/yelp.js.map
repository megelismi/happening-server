{"version":3,"sources":["../../handlers/yelp.js"],"names":["require","config","client","process","env","YELP_API_KEY","Yelp","data","callback","search","then","response","catch","console","log","error","module","exports"],"mappings":"AAAA;;;;AAIA;;;;;;;;AAFAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAIA,IAAMC,SAAS,qBAAKA,MAAL,CAAYC,QAAQC,GAAR,CAAYC,YAAxB,CAAf;;IAEMC,I;;AAEJ;;;;;AAKC,oBAAc;AAAA;AAEb;;AAEF;;;;;;;;;+BAOOC,I,EAAMC,Q,EAAU;AACrBN,mBAAOO,MAAP,CAAcF,IAAd,EACKG,IADL,CACU;AAAA,uBAAYF,WAAWA,SAAS,IAAT,EAAeG,QAAf,CAAvB;AAAA,aADV,EAEKC,KAFL,CAEW,iBAAS;AACZC,wBAAQC,GAAR,CAAY,oCAAZ,EAAkDP,IAAlD,EAAwD,QAAxD,EAAkEQ,KAAlE;;AAEAP,yBAASO,KAAT,EAAgB,IAAhB;AACH,aANL;AAOC;;;;;;AAGLC,OAAOC,OAAP,GAAiBX,IAAjB","file":"yelp.js","sourcesContent":["'use strict';\n\nrequire('dotenv').config();\n\nimport yelp from 'yelp-fusion';\n\nconst client = yelp.client(process.env.YELP_API_KEY);\n\nclass Yelp {\n\n  /**\n   * Creates a Yelp instance\n   *\n   */\n\n   constructor() {\n\n   }\n\n  /**\n   * Searchs Yelp on a given data set.\n   *\n   * @param {Object} data\n   * @param {Function} callback\n   */\n\n  search(data, callback) {\n    client.search(data)\n        .then(response => callback & callback(null, response))\n        .catch(error => {\n            console.log('Error: search yelp with this data:', data, 'error:', error);\n\n            callback(error, null);\n        });\n    };\n}\n\nmodule.exports = Yelp;\n\n"]}