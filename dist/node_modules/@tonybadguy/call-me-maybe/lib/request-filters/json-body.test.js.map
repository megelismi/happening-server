{"version":3,"sources":["../../../../../../node_modules/@tonybadguy/call-me-maybe/lib/request-filters/json-body.test.js"],"names":["_test","require","test","_jsonBody","request","body","jsonBody","greeting","result","filter","assert","equals","JSON","parse","end","headers","undefined"],"mappings":"AAAA;;AAEA,IAAMA,QAAQC,QAAQ,KAAR,EAAeC,IAA7B;AACA,IAAMC,YAAYF,QAAQ,aAAR,CAAlB;;AAEAD,MAAM,uCAAN,EAA+C,kBAAS;AACtD,MAAMI,UAAU;AACdC,UAAM,UADQ;AAEdC,cAAS;AACPC,gBAAS;AADF;AAFK,GAAhB;;AAOA,MAAMC,SAASL,UAAUM,MAAV,CAAiBL,OAAjB,CAAf;;AAEAM,SAAOC,MAAP,CAAcC,KAAKC,KAAL,CAAWL,OAAOH,IAAlB,EAAwBE,QAAtC,EAAgD,QAAhD;AACAG,SAAOI,GAAP;AACD,CAZD;;AAcAd,MAAM,gDAAN,EAAwD,kBAAS;AAC/D,MAAMI,UAAU;AACdC,UAAM;AADQ,GAAhB;;AAIA,MAAMG,SAASL,UAAUM,MAAV,CAAiBL,OAAjB,CAAf;;AAEAM,SAAOC,MAAP,CAAcH,OAAOH,IAArB,EAA2B,UAA3B;AACAK,SAAOC,MAAP,CAAcH,OAAOO,OAArB,EAA8BC,SAA9B;AACAN,SAAOI,GAAP;AACD,CAVD;;AAYAd,MAAM,0BAAN,EAAkC,kBAAS;AACzC,MAAMI,UAAU;AACdE,cAAS;AADK,GAAhB;;AAIA,MAAME,SAASL,UAAUM,MAAV,CAAiBL,OAAjB,CAAf;;AAEAM,SAAOC,MAAP,CAAcH,OAAOO,OAAP,CAAe,cAAf,CAAd,EAA8C,kBAA9C;AACAL,SAAOI,GAAP;AACD,CATD","file":"json-body.test.js","sourcesContent":["'use strict';\n\nconst _test = require('tap').test;\nconst _jsonBody = require('./json-body');\n\n_test('Body replaced with jsonBody if exists', assert =>{\n  const request = {\n    body: 'nonsense',\n    jsonBody:{\n      greeting:'oh hai'\n    }\n  };\n  \n  const result = _jsonBody.filter(request);\n  \n  assert.equals(JSON.parse(result.body).greeting, 'oh hai');\n  assert.end();\n});\n\n_test('Body and headers unchanged if jsonBody not set', assert =>{\n  const request = {\n    body: 'expected'\n  };\n  \n  const result = _jsonBody.filter(request);\n  \n  assert.equals(result.body, 'expected');\n  assert.equals(result.headers, undefined);\n  assert.end();\n});\n\n_test('Sets content-type header', assert =>{\n  const request = {\n    jsonBody:{}\n  };\n  \n  const result = _jsonBody.filter(request);\n  \n  assert.equals(result.headers['Content-Type'], 'application/json');\n  assert.end();\n});\n"]}