{"version":3,"sources":["../../../../../../node_modules/@tonybadguy/call-me-maybe/lib/response-filters/unhandled-status.js"],"names":["_TypedError","require","error","type","message","statusCode","response","filter","module","exports","unhandledStatusError"],"mappings":"AAAA;;AACA,IAAMA,cAAcC,QAAQ,aAAR,CAApB;;AAEA,IAAMC,QAAQF,YAAY;AACxBG,QAAM,6CADkB;AAExBC,WAAS,0CAFe;AAGxBC,cAAY,IAHY;AAIxBC,YAAU;AAJc,CAAZ,CAAd;;AAOA,IAAMC,SAAS,SAATA,MAAS,CAACD,QAAD,EAAc;AAC3B,MAAGA,SAASD,UAAT,GAAsB,GAAtB,IAA6BC,SAASD,UAAT,IAAuB,GAAvD,EAA2D;AACzD,UAAMH,MAAM;AACVG,kBAAYC,SAASD,UADX;AAEVC,gBAAUA;AAFA,KAAN,CAAN;AAID;AACD,SAAOA,QAAP;AACD,CARD;;AAUAE,OAAOC,OAAP,GAAiB;AACfF,UAAQA,MADO;AAEfG,wBAAsBR;AAFP,CAAjB","file":"unhandled-status.js","sourcesContent":["'use strict';\nconst _TypedError = require('error/typed');\n\nconst error = _TypedError({\n  type: 'rest-call.response-filters.unhandled-status',\n  message: 'Server returned status code {statusCode}',\n  statusCode: null,\n  response: null\n});\n\nconst filter = (response) => {\n  if(response.statusCode < 200 || response.statusCode >= 300){\n    throw error({\n      statusCode: response.statusCode,\n      response: response\n    });\n  }\n  return response;\n};\n\nmodule.exports = {\n  filter: filter,\n  unhandledStatusError: error\n};"]}