{"version":3,"sources":["../../../node_modules/async/whilst.js"],"names":["Object","defineProperty","exports","value","default","whilst","_noop","require","_noop2","_interopRequireDefault","_rest","_rest2","_onlyOnce","_onlyOnce2","obj","__esModule","test","iteratee","callback","next","err","args","apply","concat","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,QAAQC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,SAASC,uBAAuBH,KAAvB,CAAb;;AAEA,IAAII,QAAQH,QAAQ,iBAAR,CAAZ;;AAEA,IAAII,SAASF,uBAAuBC,KAAvB,CAAb;;AAEA,IAAIE,YAAYL,QAAQ,qBAAR,CAAhB;;AAEA,IAAIM,aAAaJ,uBAAuBG,SAAvB,CAAjB;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAST,MAAT,CAAgBW,IAAhB,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACtCA,eAAW,CAAC,GAAGL,WAAWT,OAAf,EAAwBc,YAAYV,OAAOJ,OAA3C,CAAX;AACA,QAAI,CAACY,MAAL,EAAa,OAAOE,SAAS,IAAT,CAAP;AACb,QAAIC,OAAO,CAAC,GAAGR,OAAOP,OAAX,EAAoB,UAAUgB,GAAV,EAAeC,IAAf,EAAqB;AAChD,YAAID,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,YAAIJ,MAAJ,EAAY,OAAOC,SAASE,IAAT,CAAP;AACZD,iBAASI,KAAT,CAAe,IAAf,EAAqB,CAAC,IAAD,EAAOC,MAAP,CAAcF,IAAd,CAArB;AACH,KAJU,CAAX;AAKAJ,aAASE,IAAT;AACH;AACDK,OAAOtB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"whilst.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = whilst;\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _rest = require('./internal/rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {Function} iteratee - A function which is called each time `test` passes.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = (0, _onlyOnce2.default)(callback || _noop2.default);\n    if (!test()) return callback(null);\n    var next = (0, _rest2.default)(function (err, args) {\n        if (err) return callback(err);\n        if (test()) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\nmodule.exports = exports['default'];"]}