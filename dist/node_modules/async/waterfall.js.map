{"version":3,"sources":["../../../node_modules/async/waterfall.js"],"names":["Object","defineProperty","exports","value","default","tasks","callback","_once2","_noop2","_isArray2","Error","length","taskIndex","nextTask","args","apply","concat","taskCallback","_onlyOnce2","_rest2","err","push","task","_isArray","require","_interopRequireDefault","_noop","_once","_rest","_onlyOnce","obj","__esModule","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;;AAIAD,QAAQE,OAAR,GAAkB,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACzCA,eAAW,CAAC,GAAGC,OAAOH,OAAX,EAAoBE,YAAYE,OAAOJ,OAAvC,CAAX;AACA,QAAI,CAAC,CAAC,GAAGK,UAAUL,OAAd,EAAuBC,KAAvB,CAAL,EAAoC,OAAOC,SAAS,IAAII,KAAJ,CAAU,2DAAV,CAAT,CAAP;AACpC,QAAI,CAACL,MAAMM,MAAX,EAAmB,OAAOL,UAAP;AACnB,QAAIM,YAAY,CAAhB;;AAEA,aAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,YAAIF,cAAcP,MAAMM,MAAxB,EAAgC;AAC5B,mBAAOL,SAASS,KAAT,CAAe,IAAf,EAAqB,CAAC,IAAD,EAAOC,MAAP,CAAcF,IAAd,CAArB,CAAP;AACH;;AAED,YAAIG,eAAe,CAAC,GAAGC,WAAWd,OAAf,EAAwB,CAAC,GAAGe,OAAOf,OAAX,EAAoB,UAAUgB,GAAV,EAAeN,IAAf,EAAqB;AAChF,gBAAIM,GAAJ,EAAS;AACL,uBAAOd,SAASS,KAAT,CAAe,IAAf,EAAqB,CAACK,GAAD,EAAMJ,MAAN,CAAaF,IAAb,CAArB,CAAP;AACH;AACDD,qBAASC,IAAT;AACH,SAL0C,CAAxB,CAAnB;;AAOAA,aAAKO,IAAL,CAAUJ,YAAV;;AAEA,YAAIK,OAAOjB,MAAMO,WAAN,CAAX;AACAU,aAAKP,KAAL,CAAW,IAAX,EAAiBD,IAAjB;AACH;;AAEDD,aAAS,EAAT;AACH,CAzBD;;AA2BA,IAAIU,WAAWC,QAAQ,gBAAR,CAAf;;AAEA,IAAIf,YAAYgB,uBAAuBF,QAAvB,CAAhB;;AAEA,IAAIG,QAAQF,QAAQ,aAAR,CAAZ;;AAEA,IAAIhB,SAASiB,uBAAuBC,KAAvB,CAAb;;AAEA,IAAIC,QAAQH,QAAQ,iBAAR,CAAZ;;AAEA,IAAIjB,SAASkB,uBAAuBE,KAAvB,CAAb;;AAEA,IAAIC,QAAQJ,QAAQ,iBAAR,CAAZ;;AAEA,IAAIL,SAASM,uBAAuBG,KAAvB,CAAb;;AAEA,IAAIC,YAAYL,QAAQ,qBAAR,CAAhB;;AAEA,IAAIN,aAAaO,uBAAuBI,SAAvB,CAAjB;;AAEA,SAASJ,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAE1B,SAAS0B,GAAX,EAArC;AAAwD;;AAE/FE,OAAO9B,OAAP,GAAiBA,QAAQ,SAAR,CAAjB;;AAEA","file":"waterfall.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (tasks, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    if (!(0, _isArray2.default)(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        if (taskIndex === tasks.length) {\n            return callback.apply(null, [null].concat(args));\n        }\n\n        var taskCallback = (0, _onlyOnce2.default)((0, _rest2.default)(function (err, args) {\n            if (err) {\n                return callback.apply(null, [err].concat(args));\n            }\n            nextTask(args);\n        }));\n\n        args.push(taskCallback);\n\n        var task = tasks[taskIndex++];\n        task.apply(null, args);\n    }\n\n    nextTask([]);\n};\n\nvar _isArray = require('lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _rest = require('./internal/rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of functions to run, each function is passed\n * a `callback(err, result1, result2, ...)` it must call on completion. The\n * first argument is an error (which can be `null`) and any further arguments\n * will be passed as arguments in order to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */"]}