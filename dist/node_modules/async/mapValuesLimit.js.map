{"version":3,"sources":["../../../node_modules/async/mapValuesLimit.js"],"names":["Object","defineProperty","exports","value","default","mapValuesLimit","_eachOfLimit","require","_eachOfLimit2","_interopRequireDefault","_noop","_noop2","_once","_once2","obj","__esModule","limit","iteratee","callback","newObj","val","key","next","err","result","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,eAAeC,QAAQ,eAAR,CAAnB;;AAEA,IAAIC,gBAAgBC,uBAAuBH,YAAvB,CAApB;;AAEA,IAAII,QAAQH,QAAQ,aAAR,CAAZ;;AAEA,IAAII,SAASF,uBAAuBC,KAAvB,CAAb;;AAEA,IAAIE,QAAQL,QAAQ,iBAAR,CAAZ;;AAEA,IAAIM,SAASJ,uBAAuBG,KAAvB,CAAb;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAST,cAAT,CAAwBS,GAAxB,EAA6BE,KAA7B,EAAoCC,QAApC,EAA8CC,QAA9C,EAAwD;AACpDA,eAAW,CAAC,GAAGL,OAAOT,OAAX,EAAoBc,YAAYP,OAAOP,OAAvC,CAAX;AACA,QAAIe,SAAS,EAAb;AACA,KAAC,GAAGX,cAAcJ,OAAlB,EAA2BU,GAA3B,EAAgCE,KAAhC,EAAuC,UAAUI,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7DL,iBAASG,GAAT,EAAcC,GAAd,EAAmB,UAAUE,GAAV,EAAeC,MAAf,EAAuB;AACtC,gBAAID,GAAJ,EAAS,OAAOD,KAAKC,GAAL,CAAP;AACTJ,mBAAOE,GAAP,IAAcG,MAAd;AACAF;AACH,SAJD;AAKH,KAND,EAMG,UAAUC,GAAV,EAAe;AACdL,iBAASK,GAAT,EAAcJ,MAAd;AACH,KARD;AASH;AACDM,OAAOvB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"mapValuesLimit.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = mapValuesLimit;\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    var newObj = {};\n    (0, _eachOfLimit2.default)(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\nmodule.exports = exports['default'];"]}