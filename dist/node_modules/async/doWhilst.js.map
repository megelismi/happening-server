{"version":3,"sources":["../../../node_modules/async/doWhilst.js"],"names":["Object","defineProperty","exports","value","default","doWhilst","_noop","require","_noop2","_interopRequireDefault","_rest","_rest2","_onlyOnce","_onlyOnce2","obj","__esModule","iteratee","test","callback","next","err","args","apply","concat","module"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,QAAQC,QAAQ,aAAR,CAAZ;;AAEA,IAAIC,SAASC,uBAAuBH,KAAvB,CAAb;;AAEA,IAAII,QAAQH,QAAQ,iBAAR,CAAZ;;AAEA,IAAII,SAASF,uBAAuBC,KAAvB,CAAb;;AAEA,IAAIE,YAAYL,QAAQ,qBAAR,CAAhB;;AAEA,IAAIM,aAAaJ,uBAAuBG,SAAvB,CAAjB;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,WAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEV,SAASU,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAST,QAAT,CAAkBW,QAAlB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;AACxCA,eAAW,CAAC,GAAGL,WAAWT,OAAf,EAAwBc,YAAYV,OAAOJ,OAA3C,CAAX;AACA,QAAIe,OAAO,CAAC,GAAGR,OAAOP,OAAX,EAAoB,UAAUgB,GAAV,EAAeC,IAAf,EAAqB;AAChD,YAAID,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,YAAIH,KAAKK,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAJ,EAA4B,OAAOL,SAASG,IAAT,CAAP;AAC5BD,iBAASI,KAAT,CAAe,IAAf,EAAqB,CAAC,IAAD,EAAOC,MAAP,CAAcF,IAAd,CAArB;AACH,KAJU,CAAX;AAKAL,aAASG,IAAT;AACH;AACDK,OAAOtB,OAAP,GAAiBA,QAAQ,SAAR,CAAjB","file":"doWhilst.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = doWhilst;\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _rest = require('./internal/rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} iteratee - A function which is called each time `test`\n * passes. The function is passed a `callback(err)`, which must be called once\n * it has completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with the non-error callback results of \n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = (0, _onlyOnce2.default)(callback || _noop2.default);\n    var next = (0, _rest2.default)(function (err, args) {\n        if (err) return callback(err);\n        if (test.apply(this, args)) return iteratee(next);\n        callback.apply(null, [null].concat(args));\n    });\n    iteratee(next);\n}\nmodule.exports = exports['default'];"]}